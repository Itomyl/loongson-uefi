#
#  Copyright (c) 2006-2010, Intel Corporation
#  Portions copyright (c) 2008-2009 Apple Inc. All rights reserved.
#
#  All rights reserved. This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution.  The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#

IDENTIFIER = Default TOOL_CHAIN_CONF

# common path macros

DEFINE WINSDK_VERSION   = v6.0A
DEFINE WINSDK_BIN       = c:\Program Files\Microsoft SDKs\Windows\DEF(WINSDK_VERSION)\bin
DEFINE WINSDKx86_BIN    = c:\Program Files (x86)\Microsoft SDKs\Windows\DEF(WINSDK_VERSION)\bin

# These defines are needed for certain Microsoft Visual Studio tools that
# are used by other toolchains.  An example is that ICC on Windows normally
# uses Microsoft's nmake.exe.


DEFINE WINDDK_BIN16     = C:\WINDDK\3790.1830\bin\bin16
DEFINE WINDDK_BIN32     = C:\WINDDK\3790.1830\bin\x86
DEFINE WINDDK_BIN64     = C:\WINDDK\3790.1830\bin\win64\x86

# NOTE: The Intel C++ Compiler for Windows requires one of the Microsoft C compiler 
#        tool chains for the linker and nmake commands.
#        This configuration assumes a Windows 2003 Server DDK installation.

DEFINE ELFGCC_BIN       = /usr/bin
DEFINE MIPSELFGCC_BIN       = /opt/cross-tools/bin/

#
# Option 1: Hard coded full path to compiler suite
DEFINE UNIXGCC_IA32_PETOOLS_PREFIX = /opt/tiano/i386-tiano-pe/i386-tiano-pe/bin/
#
# Option 2: Use an environment variable
#DEFINE UNIXGCC_IA32_PETOOLS_PREFIX = ENV(IA32_PETOOLS_PREFIX)
#DEFINE UNIXGCC_X64_PETOOLS_PREFIX  = ENV(X64_PETOOLS_PREFIX)
#
# Option 3: Install the compiler suite into your default paths
#DEFINE UNIXGCC_IA32_PETOOLS_PREFIX = i386-pc-mingw32-
#DEFINE UNIXGCC_X64_PETOOLS_PREFIX  = x86_64-pc-mingw32-
#
# Option 4: Create links under the BaseTools/Bin/gcc/ARCH directory
# Links needed: gcc, ar & ld
#DEFINE UNIXGCC_IA32_PETOOLS_PREFIX = ENV(WORKSPACE)/BaseTools/Bin/gcc/Ia32/
#DEFINE UNIXGCC_X64_PETOOLS_PREFIX  = ENV(WORKSPACE)/BaseTools/Bin/gcc/X64/
#
# Option 5: Install programs under user's home directory
#DEFINE UNIXGCC_IA32_PETOOLS_PREFIX = ENV(HOME)/programs/gcc/ia32/bin/i686-pc-mingw32-
#DEFINE UNIXGCC_X64_PETOOLS_PREFIX  = ENV(HOME)/programs/gcc/x64/bin/x86_64-pc-mingw32-
#


DEFINE GCC44_IA32_PREFIX       = /usr/bin/
#DEFINE GCC44_IA32_PREFIX       = ENV(HOME)/programs/gcc/4.4/ia32/

DEFINE UNIX_IASL_BIN           = /usr/bin/iasl
#DEFINE UNIX_IASL_BIN           = $(HOME)/programs/iasl
DEFINE WIN_ASL_BIN_DIR         = C:\ASL
DEFINE WIN_IASL_BIN            = DEF(WIN_ASL_BIN_DIR)\iasl.exe
DEFINE WIN_ASL_BIN             = DEF(WIN_ASL_BIN_DIR)\asl.exe

DEFINE IASL_FLAGS              =
DEFINE IASL_OUTFLAGS           = -p
DEFINE MS_ASL_OUTFLAGS         = /Fo=
DEFINE MS_ASL_FLAGS            =

DEFINE DEFAULT_WIN_ASL_BIN      = DEF(WIN_IASL_BIN)
DEFINE DEFAULT_WIN_ASL_FLAGS    = DEF(IASL_FLAGS)
DEFINE DEFAULT_WIN_ASL_OUTFLAGS = DEF(IASL_OUTFLAGS)
#DEFINE DEFAULT_WIN_ASL_BIN      = DEF(WIN_ASL_BIN)
#DEFINE DEFAULT_WIN_ASL_FLAGS    = DEF(MS_ASL_FLAGS)
#DEFINE DEFAULT_WIN_ASL_OUTFLAGS = DEF(MS_ASL_OUTFLAGS)

DEFINE MSFT_ASLPP_FLAGS        = /nologo /EP /C
DEFINE MSFT_ASLCC_FLAGS        = /GL- /Y- /TC /Dmain=ReferenceAcpiTable
DEFINE MSFT_ASLDLINK_FLAGS     = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE


####################################################################################
#
# format: TARGET_TOOLCHAIN_ARCH_COMMANDTYPE_ATTRIBUTE = <string>
# priority:
#         TARGET_TOOLCHAIN_ARCH_COMMANDTYPE_ATTRIBUTE (Highest)
#         ******_TOOLCHAIN_ARCH_COMMANDTYPE_ATTRIBUTE
#         TARGET_*********_ARCH_COMMANDTYPE_ATTRIBUTE
#         ******_*********_ARCH_COMMANDTYPE_ATTRIBUTE
#         TARGET_TOOLCHAIN_****_COMMANDTYPE_ATTRIBUTE
#         ******_TOOLCHAIN_****_COMMANDTYPE_ATTRIBUTE
#         TARGET_*********_****_COMMANDTYPE_ATTRIBUTE
#         ******_*********_****_COMMANDTYPE_ATTRIBUTE
#         TARGET_TOOLCHAIN_ARCH_***********_ATTRIBUTE
#         ******_TOOLCHAIN_ARCH_***********_ATTRIBUTE
#         TARGET_*********_ARCH_***********_ATTRIBUTE
#         ******_*********_ARCH_***********_ATTRIBUTE
#         TARGET_TOOLCHAIN_****_***********_ATTRIBUTE
#         ******_TOOLCHAIN_****_***********_ATTRIBUTE
#         TARGET_*********_****_***********_ATTRIBUTE
#         ******_*********_****_***********_ATTRIBUTE (Lowest)
#
####################################################################################
####################################################################################
#
# Supported Tool Chains
# =====================
#   VS2003                 - win32 - Microsoft Visual Studio .NET 2003, Intel EBC, Intel ASL
#   VS2005                 - win32 - Microsoft Visual Studio 2005 Team Suite Edition, Intel EBC, Intel ASL (also compatible with VS 2005 Express, Standard, and Pro)
#   VS2008                 - win32 - Microsoft Visual Studio 2008 Team Suite with Intel ASL
#   DDK3790                - win32 - Microsoft Windows DDK 3790.1830, Intel EBC, Intel ASL
#   UNIXGCC                - UNIX GCC, No EBC, Intel ASL
#   ELFGCC                 - Linux ELF GCC, No EBC, Intel ASL
#   CYGGCC                 - win32 - CygWin GCC, Intel EBC, Intel ASL
#   ICC                    - win32 - Intel C Compiler V9.1, Intel EBC, Intel ASL
#   MYTOOLS                - win32 - VS2005 for IA32/X64, WINDDK 3790.1830 for IPF, Intel EBC, Intel ASL
#   VS2003xASL             - win32 - Microsoft Visual Studio .NET 2003, Intel EBC, Microsoft ASL
#   VS2005xASL             - win32 - Microsoft Visual Studio 2005 Team Suite Edition, Intel EBC, Microsoft ASL
#   VS2008xASL             - win32 - Microsoft Visual Studio 2008 Team Suite with Microsoft ASL
#   DDK3790xASL            - win32 - Microsoft Windows DDK 3790.1830, Intel EBC, Microsoft ASL
#   CYGGCCxASL             - win32 - CygWin GCC, Intel EBC, Microsoft ASL
#   ICCxASL                - win32 - Intel C Compiler V9.1, Intel EBC, Microsoft ASL
#   VS2005x86              - win64 - Microsoft Visual Studio 2005 Team Suite Edition (x86), Intel EBC, Intel ASL (also compatible with VS 2005 Express, Standard, and Pro)
#   VS2008x86              - Microsoft Visual Studio 2008 (x86) w/ Intel ASL
#   ICCx86                 - win64 - Intel C Compiler V9.1 (x86), Intel EBC, Intel ASL
#   VS2005x86xASL          - win64 - Microsoft Visual Studio 2005 Team Suite Edition (x86), Intel EBC, Microsoft ASL (also compatible with VS 2005 Express, Standard, and Pro)
#   VS2008x86xASL          - Microsoft Visual Studio 2008 (x86) w/ Microsoft ASL
#   ICCx86xASL             - win64 - Intel C Compiler V9.1 (x86), Intel EBC, Microsoft ASL
#   CYGGCCx86              - win64 - CygWin GCC (x86), Intel EBC (x86), Intel ASL
#   CYGGCCx86xASL          - win64 - CygWin GCC (x86), Intel EBC (x86), Microsoft ASL
# * Commented out - All versions of VS2005 use the same standard install directory
#
####################################################################################
####################################################################################
#
# Supported Tool Chain Family
# ===========================
#   MSFT           - Microsoft
#   GCC            - GNU GCC
#   INTEL          - INTEL
####################################################################################
####################################################################################
#
# Intel EFI Byte Code Compiler (Template)
#
####################################################################################
# *_*_EBC_*_FAMILY                   = INTEL
#
# *_*_EBC_PP_PATH                    = C:\Program Files\Intel\EBC\Bin\iec.exe
# *_*_EBC_CC_PATH                    = C:\Program Files\Intel\EBC\Bin\iec.exe
# *_*_EBC_SLINK_PATH                 = C:\Program Files\Intel\EBC\Bin\link.exe
#
# *_*_EBC_SLINK_FLAGS                = /lib /NOLOGO /MACHINE:EBC
# *_*_EBC_PP_FLAGS                   = /nologo /E /TC /FI$(DEST_DIR_DEBUG)/AutoGen.h
# *_*_EBC_CC_FLAGS                   = /nologo /FAcs /c /W3 /WX /FI$(DEST_DIR_DEBUG)/AutoGen.h
# *_*_EBC_DLINK_FLAGS                = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /MACHINE:EBC /OPT:REF /NODEFAULTLIB /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER
#
####################################################################################
#
# Intel ACPI Source Language Compiler (Template)
#
####################################################################################
# *_*_*_ASL_FAMILY                   = INTEL
#
# *_*_*_ASL_PATH                     = C:\ASL\iasl.exe
#
####################################################################################
#
# Microsoft ACPI Source Language Compiler (Template)
#
####################################################################################
# *_*_*_ASL_FAMILY                   = MSFT
#
# *_*_*_ASL_PATH                     = C:\ASL\asl.exe
#
####################################################################################


####################################################################################
#
# Microsoft Device Driver Kit 3790.1830 (IA-32, X64, Itanium, with Link Time Code Generation)
# And Intel ACPI Compiler
#
####################################################################################
#   DDK3790  - Microsoft Windows DDK 3790.1830
#   ASL  - Intel ACPI Source Language Compiler (iasl.exe)
*_DDK3790_*_*_FAMILY        = MSFT

*_DDK3790_*_MAKE_PATH       = DEF(WINDDK_BIN32)\nmake.exe
*_DDK3790_*_MAKE_FLAGS           = /nologo
*_DDK3790_*_RC_PATH         = DEF(WINDDK_BIN32)\rc.exe

*_DDK3790_*_PP_FLAGS             = /nologo /E /TC /FIAutoGen.h
*_DDK3790_*_APP_FLAGS            = /nologo /E /TC
*_DDK3790_*_SLINK_FLAGS          = /nologo /LTCG
*_DDK3790_*_VFRPP_FLAGS          = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

##################
# ASL definitions
##################
*_DDK3790_*_ASL_PATH        = DEF(DEFAULT_WIN_ASL_BIN)
*_DDK3790_*_ASL_FLAGS       = DEF(DEFAULT_WIN_ASL_FLAGS)
*_DDK3790_*_ASL_OUTFLAGS    = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_DDK3790_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_DDK3790_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_DDK3790_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_DDK3790_IA32_CC_PATH      = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_SLINK_PATH   = DEF(WINDDK_BIN32)\lib.exe
*_DDK3790_IA32_DLINK_PATH   = DEF(WINDDK_BIN32)\link.exe
*_DDK3790_IA32_ASMLINK_PATH = DEF(WINDDK_BIN16)\link16.exe
*_DDK3790_IA32_PP_PATH      = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_VFRPP_PATH   = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_APP_PATH     = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_ASM_PATH     = DEF(WINDDK_BIN32)\ml.exe
*_DDK3790_IA32_ASLCC_PATH     = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_ASLPP_PATH     = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_ASLDLINK_PATH  = DEF(WINDDK_BIN32)\link.exe

  DEBUG_DDK3790_IA32_CC_FLAGS    = /nologo /c /WX /W4 /Gy /Gs8192 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_DDK3790_IA32_CC_FLAGS    = /nologo /c /WX /W4 /Gy /Gs8192 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
  DEBUG_DDK3790_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /coff /Cx /Zd /Zi
RELEASE_DDK3790_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /coff /Cx /Zd
  DEBUG_DDK3790_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4086 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:I386 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_DDK3790_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4086 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:I386 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.data=.text /MERGE:.rdata=.text
    *_DDK3790_IA32_ASMLINK_FLAGS = /nologo /tiny

####################################################################################
#
# Microsoft Device Driver Kit 3790.1830 (IA-32, X64, Itanium, with Link Time Code Generation)
# And Microsoft ACPI Compiler
#
####################################################################################
#   DDK3790xASL  - Microsoft Windows DDK 3790.1830
#   ASL          - Microsoft ACPI Source Language Compiler (asl.exe)
*_DDK3790xASL_*_*_FAMILY        = MSFT

*_DDK3790xASL_*_MAKE_PATH       = DEF(WINDDK_BIN32)\nmake.exe
*_DDK3790xASL_*_MAKE_FLAGS           = /nologo
*_DDK3790xASL_*_RC_PATH         = DEF(WINDDK_BIN32)\rc.exe

*_DDK3790xASL_*_PP_FLAGS             = /nologo /E /TC /FIAutoGen.h
*_DDK3790xASL_*_APP_FLAGS            = /nologo /E /TC
*_DDK3790xASL_*_SLINK_FLAGS          = /nologo /LTCG
*_DDK3790xASL_*_VFRPP_FLAGS          = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

##################
# ASL definitions
##################
*_DDK3790xASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_DDK3790xASL_*_ASL_FLAGS       = 
*_DDK3790xASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_DDK3790xASL_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_DDK3790xASL_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_DDK3790xASL_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_DDK3790xASL_IA32_CC_PATH      = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_SLINK_PATH   = DEF(WINDDK_BIN32)\lib.exe
*_DDK3790xASL_IA32_DLINK_PATH   = DEF(WINDDK_BIN32)\link.exe
*_DDK3790xASL_IA32_ASMLINK_PATH = DEF(WINDDK_BIN16)\link16.exe
*_DDK3790xASL_IA32_PP_PATH      = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_VFRPP_PATH   = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_APP_PATH     = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_ASM_PATH     = DEF(WINDDK_BIN32)\ml.exe
*_DDK3790xASL_IA32_ASLCC_PATH     = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_ASLPP_PATH     = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_ASLDLINK_PATH  = DEF(WINDDK_BIN32)\link.exe

  DEBUG_DDK3790xASL_IA32_CC_FLAGS    = /nologo /c /WX /W4 /Gy /Gs8192 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_DDK3790xASL_IA32_CC_FLAGS    = /nologo /c /WX /W4 /Gy /Gs8192 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
  DEBUG_DDK3790xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /coff /Cx /Zd /Zi
RELEASE_DDK3790xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /coff /Cx /Zd
  DEBUG_DDK3790xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4086 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:I386 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_DDK3790xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4086 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:I386 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.data=.text /MERGE:.rdata=.text
    *_DDK3790xASL_IA32_ASMLINK_FLAGS = /nologo /tiny

####################################################################################
# GCC Common
####################################################################################

*_*_*_OBJCOPY_PATH              = echo
*_*_*_OBJCOPY_FLAGS             = objcopy not needed for
*_*_*_SYMRENAME_PATH            = echo
*_*_*_SYMRENAME_FLAGS           = Symbol renaming not needed for

DEFINE GCC_ALL_CC_FLAGS            = -g -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-missing-braces -Wno-array-bounds -c -include AutoGen.h
DEFINE GCC_IA32_CC_FLAGS           = DEF(GCC_ALL_CC_FLAGS) -m32 -malign-double -freorder-blocks -freorder-blocks-and-partition -O2
DEFINE GCC_MIPS64_CC_FLAGS           = DEF(GCC_ALL_CC_FLAGS) -mips3 -malign-double -freorder-blocks -freorder-blocks-and-partition -O2
DEFINE GCC_DLINK_FLAGS_COMMON      = -nostdlib --pie
DEFINE GCC_ASM_FLAGS               = -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h
DEFINE GCC_PP_FLAGS                = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
DEFINE GCC_VFRPP_FLAGS             = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
DEFINE GCC_ASLPP_FLAGS             = -x c -E -P
DEFINE GCC_ASLCC_FLAGS             = -x c
DEFINE GCC_WINDRES_FLAGS           = -J rc -O coff
DEFINE GCC_IA32_RC_FLAGS           = -I binary -O elf32-i386        -B i386 --rename-section .data=.hii
DEFINE GCC_MIPS64_RC_FLAGS           = -I binary -O elf32-i386        -B i386 --rename-section .data=.hii


DEFINE GCC44_ALL_CC_FLAGS            = -g -fshort-wchar -fno-stack-protector -fno-strict-aliasing -Wall -Werror -Wno-missing-braces -Wno-array-bounds -ffunction-sections -fdata-sections -c -include AutoGen.h -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings
DEFINE GCC44_IA32_CC_FLAGS           = DEF(GCC44_ALL_CC_FLAGS) -m32 -malign-double -D EFI32
DEFINE GCC44_ASM_FLAGS               = DEF(GCC_ASM_FLAGS)

####################################################################################
#
# Unix GCC And Intel Linux ACPI Compiler
#
####################################################################################
#   UNIXGCC         - UNIX GCC
#   ASL             - Intel Linux ACPI Source Language Compiler (iasl)
*_UNIXGCC_*_*_FAMILY               = GCC

*_UNIXGCC_*_MAKE_PATH                    = make
*_UNIXGCC_*_ASL_PATH                     = DEF(UNIX_IASL_BIN)

*_UNIXGCC_*_ASM_FLAGS                    = DEF(GCC_ASM_FLAGS)
*_UNIXGCC_*_PP_FLAGS                     = DEF(GCC_PP_FLAGS)
*_UNIXGCC_*_ASLPP_FLAGS                  = DEF(GCC_ASLPP_FLAGS)
*_UNIXGCC_*_ASLCC_FLAGS                  = DEF(GCC_ASLCC_FLAGS)
*_UNIXGCC_*_VFRPP_FLAGS                  = DEF(GCC_VFRPP_FLAGS)
*_UNIXGCC_*_APP_FLAGS                    = 
*_UNIXGCC_*_ASL_FLAGS                    = DEF(IASL_FLAGS)
*_UNIXGCC_*_ASL_OUTFLAGS                 = DEF(IASL_OUTFLAGS)

##################
# IA32 definitions
##################
*_UNIXGCC_IA32_OBJCOPY_PATH         = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)objcopy
*_UNIXGCC_IA32_PP_PATH              = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_CC_PATH              = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_SLINK_PATH           = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)ar
*_UNIXGCC_IA32_DLINK_PATH           = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)ld
*_UNIXGCC_IA32_ASLPP_PATH           = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_ASLCC_PATH           = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_ASLDLINK_PATH        = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)ld
*_UNIXGCC_IA32_ASM_PATH             = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_VFRPP_PATH           = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_RC_PATH              = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)objcopy

*_UNIXGCC_IA32_CC_FLAGS             = DEF(GCC_IA32_CC_FLAGS)
*_UNIXGCC_IA32_RC_FLAGS             = DEF(GCC_IA32_RC_FLAGS)
*_UNIXGCC_IA32_OBJCOPY_FLAGS        =

####################################################################################
#
# MIPSElf GCC - This configuration is used to compile on Linux boxes to produce elf
#           binaries.
#
####################################################################################
#

*_MIPSELFGCC_*_*_FAMILY                 = GCC
*_MIPSELFGCC_*_MAKE_PATH                = make

*_MIPSELFGCC_*_PP_FLAGS                     = -E -x -mabi=64 -mno-abicalls assembler-with-cpp -include AutoGen.h
*_MIPSELFGCC_*_VFRPP_FLAGS                  = -x c -E -mabi=64 -P -DVFRCOMPILE --include $(MODULE_NAME)StrDefs.h

##################
# ASL definitions
##################
*_MIPSELFGCC_*_ASL_PATH                     = DEF(UNIX_IASL_BIN)
*_MIPSELFGCC_*_ASL_FLAGS                    = DEF(IASL_FLAGS)
*_MIPSELFGCC_*_ASL_OUTFLAGS                 = DEF(IASL_OUTFLAGS)
*_MIPSELFGCC_*_ASLPP_FLAGS                  = -x c -E -P
*_MIPSELFGCC_*_ASLCC_FLAGS                  = -x c
*_MIPSELFGCC_*_ASLDLINK_FLAGS               = DEF(GCC_DLINK_FLAGS_COMMON) --entry _ReferenceAcpiTable
##################
# MIPS64 definitions
##################
*_MIPSELFGCC_MIPS64_OBJCOPY_PATH          = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-objcopy
*_MIPSELFGCC_MIPS64_CC_PATH               = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-gcc
*_MIPSELFGCC_MIPS64_SLINK_PATH            = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-ar
*_MIPSELFGCC_MIPS64_DLINK_PATH            = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-ld
*_MIPSELFGCC_MIPS64_ASM_PATH              = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-as
*_MIPSELFGCC_MIPS64_PP_PATH               = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-gcc
*_MIPSELFGCC_MIPS64_VFRPP_PATH            = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-gcc
*_MIPSELFGCC32_MIPS64_ASLCC_PATH          = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-gcc
*_MIPSELFGCC32_MIPS64_ASLPP_PATH          = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-gcc
*_MIPSELFGCC32_MIPS64_ASLDLINK_PATH       = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-ld
*_MIPSELFGCC_MIPS64_RC_PATH               = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-objcopy

*_MIPSELFGCC_MIPS64_CC_FLAGS              = -mips3 -g -mabi=64 -mno-abicalls -Os -fshort-wchar -fno-strict-aliasing -Wall -Wstrict-prototypes -Wno-trigraphs -Werror-implicit-function-declaration -Wstrict-aliasing -fno-common -ffreestanding -fno-builtin -pipe -nostdlib -c -include $(DEST_DIR_DEBUG)/AutoGen.h -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings
*_MIPSELFGCC_MIPS64_SLINK_FLAGS           =
*_MIPSELFGCC_MIPS64_DLINK_FLAGS           = -melf64ltsmip  -nostdlib --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT)
*_MIPSELFGCC_MIPS64_ASM_FLAGS             = -mabi=64
*_MIPSELFGCC_MIPS64_PP_FLAGS              = -mips3 -E -mabi=64 -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
*_MIPSELFGCC_MIPS64_VFRPP_FLAGS           = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
*_MIPSELFGCC_MIPS64_RC_FLAGS              = DEF(GCC_MIPS64_RC_FLAGS)
*_MIPSELFGCC_MIPS64_OBJCOPY_FLAGS         =


##################
# IA32 definitions
##################
*_MIPSELFGCC_IA32_OBJCOPY_PATH          = DEF(ELFGCC_BIN)/objcopy
*_MIPSELFGCC_IA32_CC_PATH               = DEF(ELFGCC_BIN)/gcc
*_MIPSELFGCC_IA32_SLINK_PATH            = DEF(ELFGCC_BIN)/ar
*_MIPSELFGCC_IA32_DLINK_PATH            = DEF(ELFGCC_BIN)/ld
*_MIPSELFGCC_IA32_ASM_PATH              = DEF(ELFGCC_BIN)/gcc
*_MIPSELFGCC_IA32_PP_PATH               = DEF(ELFGCC_BIN)/gcc
*_MIPSELFGCC_IA32_VFRPP_PATH            = DEF(ELFGCC_BIN)/gcc
*_MIPSELFGCC32_IA32_ASLCC_PATH          = DEF(ELFGCC_BIN)/gcc
*_MIPSELFGCC32_IA32_ASLPP_PATH          = DEF(ELFGCC_BIN)/gcc
*_MIPSELFGCC32_IA32_ASLDLINK_PATH       = DEF(ELFGCC_BIN)/ld
*_MIPSELFGCC_IA32_RC_PATH               = DEF(ELFGCC_BIN)/objcopy

*_MIPSELFGCC_IA32_CC_FLAGS              = -m32 -g -fshort-wchar -fno-strict-aliasing -Wall -malign-double -c -include $(DEST_DIR_DEBUG)/AutoGen.h -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings
*_MIPSELFGCC_IA32_SLINK_FLAGS           =
*_MIPSELFGCC_IA32_DLINK_FLAGS           = -melf_i386 -nostdlib --shared --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT)
#*_MIPSELFGCC_IA32_DLINK_FLAGS          = -melf_i386 -nostdlib -n -q -Ttext 0x220 --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT)
*_MIPSELFGCC_IA32_ASM_FLAGS             = -m32 -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h
*_MIPSELFGCC_IA32_PP_FLAGS              = -m32 -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
*_MIPSELFGCC_IA32_VFRPP_FLAGS           = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
*_MIPSELFGCC_IA32_RC_FLAGS              = DEF(GCC_IA32_RC_FLAGS)
*_MIPSELFGCC_IA32_OBJCOPY_FLAGS         =


####################################################################################
#
# Elf GCC - This configuration is used to compile on Linux boxes to produce elf
#           binaries.
#
####################################################################################
#   ELFGCC           - Linux ELF GCC
*_ELFGCC_*_*_FAMILY                 = GCC
*_ELFGCC_*_MAKE_PATH                = make

*_ELFGCC_*_PP_FLAGS                     = -E -x assembler-with-cpp -include AutoGen.h
*_ELFGCC_*_VFRPP_FLAGS                  = -x c -E -P -DVFRCOMPILE --include $(MODULE_NAME)StrDefs.h

##################
# ASL definitions
##################
*_ELFGCC_*_ASL_PATH                     = DEF(UNIX_IASL_BIN)
*_ELFGCC_*_ASL_FLAGS                    = DEF(IASL_FLAGS)
*_ELFGCC_*_ASL_OUTFLAGS                 = DEF(IASL_OUTFLAGS)
*_ELFGCC_*_ASLPP_FLAGS                  = -x c -E -P
*_ELFGCC_*_ASLCC_FLAGS                  = -x c
*_ELFGCC_*_ASLDLINK_FLAGS               = DEF(GCC_DLINK_FLAGS_COMMON) --entry _ReferenceAcpiTable
##################
# MIPS64 definitions
##################
*_ELFGCC_MIPS64_OBJCOPY_PATH          = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-objcopy
*_ELFGCC_MIPS64_CC_PATH               = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-gcc
*_ELFGCC_MIPS64_SLINK_PATH            = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-ar
*_ELFGCC_MIPS64_DLINK_PATH            = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-ld
*_ELFGCC_MIPS64_ASM_PATH              = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-gcc
*_ELFGCC_MIPS64_PP_PATH               = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-gcc
*_ELFGCC_MIPS64_VFRPP_PATH            = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-gcc
*_ELFGCC32_MIPS64_ASLCC_PATH          = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-gcc
*_ELFGCC32_MIPS64_ASLPP_PATH          = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-gcc
*_ELFGCC32_MIPS64_ASLDLINK_PATH       = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-ld
*_ELFGCC_MIPS64_RC_PATH               = DEF(MIPSELFGCC_BIN)/mipsel-linux-gnu-objcopy

*_ELFGCC_MIPS64_CC_FLAGS              = -mips3 -g  -fshort-wchar -fno-strict-aliasing -Wall -c -include $(DEST_DIR_DEBUG)/AutoGen.h -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings
*_ELFGCC_MIPS64_SLINK_FLAGS           =
*_ELFGCC_MIPS64_DLINK_FLAGS           = -melf64ltsmip  -nostdlib --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT)
*_ELFGCC_MIPS64_ASM_FLAGS             = -mips3 -c  -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h
*_ELFGCC_MIPS64_PP_FLAGS              = -mips3 -E -mabi=64 -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
*_ELFGCC_MIPS64_VFRPP_FLAGS           = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
*_ELFGCC_MIPS64_RC_FLAGS              = DEF(GCC_MIPS64_RC_FLAGS)
*_ELFGCC_MIPS64_OBJCOPY_FLAGS         =


##################
# IA32 definitions
##################
*_ELFGCC_IA32_OBJCOPY_PATH          = DEF(ELFGCC_BIN)/objcopy
*_ELFGCC_IA32_CC_PATH               = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IA32_SLINK_PATH            = DEF(ELFGCC_BIN)/ar
*_ELFGCC_IA32_DLINK_PATH            = DEF(ELFGCC_BIN)/ld
*_ELFGCC_IA32_ASM_PATH              = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IA32_PP_PATH               = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IA32_VFRPP_PATH            = DEF(ELFGCC_BIN)/gcc
*_ELFGCC32_IA32_ASLCC_PATH          = DEF(ELFGCC_BIN)/gcc
*_ELFGCC32_IA32_ASLPP_PATH          = DEF(ELFGCC_BIN)/gcc
*_ELFGCC32_IA32_ASLDLINK_PATH       = DEF(ELFGCC_BIN)/ld
*_ELFGCC_IA32_RC_PATH               = DEF(ELFGCC_BIN)/objcopy

*_ELFGCC_IA32_CC_FLAGS              = -m32 -g -fshort-wchar -fno-strict-aliasing -Wall -malign-double -c -include $(DEST_DIR_DEBUG)/AutoGen.h -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings
*_ELFGCC_IA32_SLINK_FLAGS           =
*_ELFGCC_IA32_DLINK_FLAGS           = -melf_i386 -nostdlib --shared --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT)
#*_ELFGCC_IA32_DLINK_FLAGS          = -melf_i386 -nostdlib -n -q -Ttext 0x220 --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT)
*_ELFGCC_IA32_ASM_FLAGS             = -m32 -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h
*_ELFGCC_IA32_PP_FLAGS              = -m32 -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
*_ELFGCC_IA32_VFRPP_FLAGS           = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
*_ELFGCC_IA32_RC_FLAGS              = DEF(GCC_IA32_RC_FLAGS)
*_ELFGCC_IA32_OBJCOPY_FLAGS         =

####################################################################################
#
# MYTOOLS
#   IA32 - Microsoft Visual Studio .NET 2003 and Microsoft Windows DDK 3790.1830 for 16-bit linker
#   X64  - Microsoft Windows DDK 3790.1830
#   IPF  - Microsoft Windows DDK 3790.1830
#   EBC  - Intel EFI Byte Code Compiler
#
####################################################################################
#   MYTOOLS          - Settings compatible with previous versions of tools_def.template
*_MYTOOLS_*_*_FAMILY                = MSFT

##################
# ASL definitions
##################
*_MYTOOLS_*_ASL_PATH        = DEF(DEFAULT_WIN_ASL_BIN)
*_MYTOOLS_*_ASL_FLAGS       = DEF(DEFAULT_WIN_ASL_FLAGS)
*_MYTOOLS_*_ASL_OUTFLAGS    = DEF(DEFAULT_WIN_ASL_OUTFLAGS)


*_MYTOOLS_*_MAKE_FLAGS                   = /nologo
*_MYTOOLS_*_VFRPP_FLAGS                  = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_MYTOOLS_*_APP_FLAGS                    = /nologo /E /TC
*_MYTOOLS_*_PP_FLAGS                     = /nologo /E /TC /FIAutoGen.h
*_MYTOOLS_*_SLINK_FLAGS                  = /nologo /LTCG

  DEBUG_MYTOOLS_IA32_CC_FLAGS            = /nologo /c /WX /GS- /W4 /Gs8192 /Gy /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_MYTOOLS_IA32_CC_FLAGS            = /nologo /c /WX /GS- /W4 /Gs8192 /Gy /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
  DEBUG_MYTOOLS_IA32_ASM_FLAGS           = /nologo /c /WX /W3 /coff /Cx /Zd /Zi
RELEASE_MYTOOLS_IA32_ASM_FLAGS           = /nologo /c /WX /W3 /coff /Cx /Zd
  DEBUG_MYTOOLS_IA32_DLINK_FLAGS         = /NOLOGO /NODEFAULTLIB /IGNORE:4086 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:I386 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
RELEASE_MYTOOLS_IA32_DLINK_FLAGS         = /NOLOGO /NODEFAULTLIB /IGNORE:4086 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:I386 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.data=.text /MERGE:.rdata=.text /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
      *_MYTOOLS_IA32_ASMLINK_FLAGS       = /nologo /tiny


##################
# EBC definitions
##################
*_MYTOOLS_EBC_*_FAMILY              = INTEL

*_MYTOOLS_EBC_MAKE_FLAGS                 = /nologo
*_MYTOOLS_EBC_PP_FLAGS                   = /nologo /E /TC /FIAutoGen.h
*_MYTOOLS_EBC_CC_FLAGS                   = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_MYTOOLS_EBC_VFRPP_FLAGS                = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_MYTOOLS_EBC_SLINK_FLAGS                = /lib /NOLOGO /MACHINE:EBC
*_MYTOOLS_EBC_DLINK_FLAGS                = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP


##################
# VfrCompiler definitions
##################
*_*_*_VFR_PATH                      = VfrCompile
*_*_*_VFR_FLAGS                     = -l -n

##################
# OptionRom tool definitions
##################
*_*_*_OPTROM_PATH                   = EfiRom
*_*_*_OPTROM_FLAGS                  = -e

##################
# Asl Compiler definitions
##################
*_*_*_ASLCC_FLAGS                  = /GL- /Y- /TC /Dmain=ReferenceAcpiTable
*_*_*_ASLDLINK_FLAGS               = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE
*_*_*_ASLPP_FLAGS                  = /nologo /EP /C
*_*_*_ASL_FLAGS                    =

##################
# LzmaCompress tool definitions
##################
*_*_*_LZMA_PATH          = LzmaCompress
*_*_*_LZMA_GUID          = EE4E5898-3914-4259-9D6E-DC7BD79403CF

##################
# TianoCompress tool definitions
##################
*_*_*_TIANO_PATH         = TianoCompress
*_*_*_TIANO_GUID         = A31280AD-481E-41B6-95E8-127F4C984779

